plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.algaworks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

//	https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
	compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.1.0.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-security'

// https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.4.0.RELEASE'

//	https://mvnrepository.com/artifact/org.springframework.security.oauth.boot/spring-security-oauth2-autoconfigure
	compile group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.2.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

// https://mvnrepository.com/artifact/org.hibernate/hibernate-jpamodelgen
	compile group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: '5.4.13.Final'
	annotationProcessor("javax.xml.bind:jaxb-api")
	annotationProcessor("org.hibernate:hibernate-jpamodelgen")
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

compileJava {
	options.annotationProcessorGeneratedSourcesDirectory = file("${buildDir}/generated")
}

sourceSets.main.java.srcDirs += "${buildDir}/generated"

test {
	useJUnitPlatform()
}
